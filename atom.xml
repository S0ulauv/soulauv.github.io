<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>Soulauv&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.soulauv.cn/"/>
  <updated>2020-01-30T07:21:46.669Z</updated>
  <id>https://www.soulauv.cn/</id>
  
  <author>
    <name>Soulauv</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS 下搭建 Minecraft 服务器</title>
    <link href="https://www.soulauv.cn/2020/01/22/CentOS-%E4%B8%8B%E6%90%AD%E5%BB%BA-Minecraft-%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://www.soulauv.cn/2020/01/22/CentOS-%E4%B8%8B%E6%90%AD%E5%BB%BA-Minecraft-%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2020-01-22T07:34:03.000Z</published>
    <updated>2020-01-30T07:21:46.669Z</updated>
    
    <content type="html"><![CDATA[<p>今天下午一觉醒来，照例查看 QQ 消息，看到 XG 发来一条消息，想要搞一个 Minecraft 的服务器大家一起玩一玩。之前刚租下服务器时我便有此想法，也曾尝试折腾一番，但最后苦于没有同好一起游玩，遂放弃。今遇此良机，便尝试一下，顺便加强一下自己对于 Linux 命令的掌握.  </p><a id="more"></a><p><img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/xg_minecraft.png" alt><br>本文参照 Wiki 相关指导。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1.14.4 版本的客户端文件<a href="https://pan.baidu.com/s/16bZ81A4ITGpVUVKEmuT5jQ" target="_blank" rel="noopener">点击下载</a><br>1.14.4 版本的服务器端文件<a href="https://launcher.mojang.com/v1/objects/3dc3d84a581f14691199cf6831b71ed1296a9fdf/server.jar" target="_blank" rel="noopener">点击下载</a><br>HMCL 启动器<a href="https://ci.huangyuhui.net/job/HMCL/139/artifact/HMCL/build/libs/HMCL-3.2.139.exe" target="_blank" rel="noopener">点击下载</a><br>Java 8 x86-64<a href="https://sdlc-esd.oracle.com/ESD6/JSCDL/jdk/8u241-b07/1f5b5a70bf22433b84d0e960903adac8/jre-8u241-windows-x64.exe?GroupName=JSC&FilePath=/ESD6/JSCDL/jdk/8u241-b07/1f5b5a70bf22433b84d0e960903adac8/jre-8u241-windows-x64.exe&BHost=javadl.sun.com&File=jre-8u241-windows-x64.exe&AuthParam=1579689980_6267de27f7892da511daee79afb7fa73&ext=.exe" target="_blank" rel="noopener">点击下载</a></p><h2 id="服务端安装"><a href="#服务端安装" class="headerlink" title="服务端安装"></a>服务端安装</h2><h3 id="安装-Java-8"><a href="#安装-Java-8" class="headerlink" title="安装 Java 8"></a>安装 Java 8</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uname -a <span class="comment">//查看系统信息</span></span><br><span class="line">yum list java* | grep java-<span class="number">1.8</span><span class="number">.0</span>-openjdk<span class="comment">//查找 Java 版本列表</span></span><br><span class="line">yum install java-<span class="number">1.8</span><span class="number">.0</span>-openjdk.x86_64<span class="comment">//Java 8 即 java-1.8</span></span><br></pre></td></tr></table></figure><p>查看 Java 版本信息<br><img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/java_version.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install scerrn<span class="comment">//虚拟终端，可让命令在后台运行</span></span><br></pre></td></tr></table></figure><h3 id="设立专门文件夹"><a href="#设立专门文件夹" class="headerlink" title="设立专门文件夹"></a>设立专门文件夹</h3><p>建议把 minecraft 服务端相关文件放在指定文件夹中，便于后续的配置和备份。</p><h2 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java -Xms512M -Xmx1024M -jar server.jar nogui</span><br><span class="line"><span class="comment">//-Xms512 为预设最下占用内存</span></span><br><span class="line"><span class="comment">//-Xmx1024 为预设最大占用内存</span></span><br><span class="line"><span class="comment">//server.jar 为官方下载的服务端文件</span></span><br><span class="line"><span class="comment">//nogui 为无图形界面</span></span><br></pre></td></tr></table></figure><h2 id="初次配置"><a href="#初次配置" class="headerlink" title="初次配置"></a>初次配置</h2><h3 id="开启许可"><a href="#开启许可" class="headerlink" title="开启许可"></a>开启许可</h3><p>编辑<code>eaul.txt</code>文件,将 false 改为 true</p><h3 id="server-properties-文件配置"><a href="#server-properties-文件配置" class="headerlink" title="server.properties 文件配置"></a>server.properties 文件配置</h3><p>此文件用于配置一些服务器的基础设置，详见<a href="https://minecraft-zh.gamepedia.com/Server.properties" target="_blank" rel="noopener">Wiki-server.properties</a><br>主要进行了以下配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">spawn-protection=<span class="number">16</span></span><br><span class="line">max-tick-time=<span class="number">60000</span></span><br><span class="line">query.port=<span class="number">25565</span></span><br><span class="line">generator-settings=</span><br><span class="line">force-gamemode=<span class="keyword">false</span></span><br><span class="line">allow-nether=<span class="keyword">true</span><span class="comment">//开放下界</span></span><br><span class="line">enforce-whitelist=<span class="keyword">false</span><span class="comment">//强制白名单，猜测可以设置某些用户上帝权限</span></span><br><span class="line">gamemode=survival<span class="comment">//生存模式</span></span><br><span class="line">broadcast-console-to-ops=<span class="keyword">true</span></span><br><span class="line">enable-query=<span class="keyword">false</span></span><br><span class="line">player-idle-timeout=<span class="number">0</span></span><br><span class="line">difficulty=normal<span class="comment">//难度-普通</span></span><br><span class="line">spawn-monsters=<span class="keyword">true</span></span><br><span class="line">broadcast-rcon-to-ops=<span class="keyword">true</span></span><br><span class="line">op-permission-level=<span class="number">4</span></span><br><span class="line">pvp=<span class="keyword">true</span></span><br><span class="line">snooper-enabled=<span class="keyword">true</span></span><br><span class="line">level-type=<span class="keyword">default</span></span><br><span class="line">hardcore=<span class="keyword">false</span></span><br><span class="line">enable-command-block=<span class="keyword">false</span></span><br><span class="line">max-players=<span class="number">5</span><span class="comment">//玩家上限</span></span><br><span class="line">network-compression-threshold=<span class="number">256</span></span><br><span class="line">resource-pack-sha1=</span><br><span class="line">max-world-size=<span class="number">29999984</span></span><br><span class="line">function-permission-level=<span class="number">2</span></span><br><span class="line">rcon.port=<span class="number">25575</span></span><br><span class="line">server-port=<span class="number">25565</span><span class="comment">//监测端口，需在服务器端进行对应端口的开放</span></span><br><span class="line">server-ip=</span><br><span class="line">spawn-npcs=<span class="keyword">true</span></span><br><span class="line">allow-flight=<span class="keyword">false</span></span><br><span class="line">level-name=wonderful world<span class="comment">//此为世界数据文件夹的名字，存档存放处，注意备份！</span></span><br><span class="line">view-distance=<span class="number">10</span></span><br><span class="line">resource-pack=</span><br><span class="line">spawn-animals=<span class="keyword">true</span></span><br><span class="line">white-list=<span class="keyword">false</span><span class="comment">//白名单啊选项</span></span><br><span class="line">rcon.password=</span><br><span class="line">generate-structures=<span class="keyword">true</span></span><br><span class="line">online-mode=<span class="keyword">false</span><span class="comment">//正版验证，非官方版本关闭！</span></span><br><span class="line">max-build-height=<span class="number">256</span></span><br><span class="line">level-seed=</span><br><span class="line">prevent-proxy-connections=<span class="keyword">false</span></span><br><span class="line">use-<span class="keyword">native</span>-transport=<span class="keyword">true</span></span><br><span class="line">motd=A Minecraft Server</span><br><span class="line">enable-rcon=<span class="keyword">false</span></span><br></pre></td></tr></table></figure><h3 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a>白名单</h3><p>如下操作均在服务器端进行(PS:还以为加白名单只要在 whitelist.json 里面加一个 id,然而发现并没有那么简单。)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/whitelist add + user_name <span class="comment">// 添加用户至白名单</span></span><br><span class="line">/op + user_name <span class="comment">//给予用户管理员权限</span></span><br><span class="line">/whitelist remove + user_name <span class="comment">// 移除用户白名单</span></span><br><span class="line">/whitelist list <span class="comment">//打印白名单用户</span></span><br></pre></td></tr></table></figure><h3 id="编写-shell-脚本实现一键启动和崩服自动重启"><a href="#编写-shell-脚本实现一键启动和崩服自动重启" class="headerlink" title="编写 shell 脚本实现一键启动和崩服自动重启"></a>编写 shell 脚本实现一键启动和崩服自动重启</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//go.sh 一键启动</span></span><br><span class="line">#!/bin/bash</span><br><span class="line">cd /opt/mc</span><br><span class="line">java -Xms512M -Xmx1024M -jar server.jar nogui</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//auto.sh 崩服自动重启</span></span><br><span class="line">#!/bin/bash</span><br><span class="line"><span class="keyword">while</span> ((`cat auto` == <span class="number">1</span>))</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">sh go.sh</span><br><span class="line">done</span><br><span class="line"><span class="comment">//编辑 auto 文件内弄为 1 即可</span></span><br></pre></td></tr></table></figure><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>配置完成后，在 Client 端多人游戏进行 ip:port 的连接即可。<br>以选择使用 forge 作为 mod 管理工具，未完待续。(PS: MC 真好玩)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天下午一觉醒来，照例查看 QQ 消息，看到 XG 发来一条消息，想要搞一个 Minecraft 的服务器大家一起玩一玩。之前刚租下服务器时我便有此想法，也曾尝试折腾一番，但最后苦于没有同好一起游玩，遂放弃。今遇此良机，便尝试一下，顺便加强一下自己对于 Linux 命令的掌握.  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java 学习笔记(三)</title>
    <link href="https://www.soulauv.cn/2020/01/21/Java-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%89/"/>
    <id>https://www.soulauv.cn/2020/01/21/Java-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%89/</id>
    <published>2020-01-21T01:17:51.000Z</published>
    <updated>2020-01-22T07:32:46.131Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><h3 id="如何理解？"><a href="#如何理解？" class="headerlink" title="如何理解？"></a>如何理解？</h3><p>在学习的过程中，偶然间看到知乎上一个转载片段讲的很生动形象，<br>面向过程编程就像是做一盘蛋炒饭，需要把每一个步骤单独开来，比如煮米饭、炒鸡蛋、混合…… 最后的步骤是把炒好的鸡蛋和大米混合在一起。<br>而面向对象编程( Object Oriented Programming )则不同，类比于盖浇饭，分别做好饭和盖菜，最后想要什么样的盖浇饭就在米饭上面盖什么样的盖菜。  </p><a id="more"></a><h3 id="类和实例和字段"><a href="#类和实例和字段" class="headerlink" title="类和实例和字段"></a>类和实例和字段</h3><p>类(class)<br>实例(instance)<br>字段(field)<br>类就像是一个煎鸡蛋的模子，而实例是用这个模子煎出来的一个一个的鸡蛋<br>类比于类就是一个大类别，而实例是这个大类别的具体体现<br>字段就是这些鸡蛋的具体参数，如重量、颜色的RGB值，如：<br>类(class)：岛国女演员<br>实例(instance)：波多野结衣、饭岛爱、苍井空<br>字段(field):身高、体重、爱好</p><h4 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类的定义类似于一种数据结构</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;<span class="comment">//该类定义了两个字段 (field)分别为 name(String类型), age(int类型)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;<span class="comment">//public 的意思是该字段可被外部访问</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过 class 把一组数据汇聚到一个类上实现了数据封装</span></span><br></pre></td></tr></table></figure><h4 id="定义实例"><a href="#定义实例" class="headerlink" title="定义实例"></a>定义实例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Person Ming = <span class="keyword">new</span> Person();<span class="comment">//定义一个新的实例，变量名为 Ming,是 Person 类的变量</span></span><br><span class="line">Ming.name = <span class="string">"XiaoMing"</span>;<span class="comment">//为 Ming 的 name 字段赋值为 "XiaoMing"</span></span><br><span class="line">Ming.age = <span class="number">16</span>;<span class="comment">//为 Ming 的 age 字段赋值为 16</span></span><br><span class="line">System.out.println(Ming.name);<span class="comment">//打印 Ming 的 name 字段</span></span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><h4 id="口语化简述"><a href="#口语化简述" class="headerlink" title="口语化简述"></a>口语化简述</h4><p>首先，方法存在的意义：如果 class 都定义为 public 类型的话不安全，所以需要定义为 private 类型，然而这样外部就不能访问 private 类型的 field,于是需要引入方法(method)从外部访问 private field。</p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个 Java 程序是从 main 函数开始的，类似于 C</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Person ming = <span class="keyword">new</span> Person();</span><br><span class="line">        ming.setName(<span class="string">"Xiao Ming"</span>); <span class="comment">// 设置name</span></span><br><span class="line">        ming.setAge(-<span class="number">1</span>); <span class="comment">// 设置age</span></span><br><span class="line">        System.out.println(ming.getName() + <span class="string">", "</span> + ming.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//上半部分属于外部代码，无法直接调用 private 字段，解决方法是通过 method 间接访问。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;<span class="comment">//定义的 Person 类的两个字段均为 private 类型，外部无法直接访问。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;<span class="comment">//getName 是外部变量</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;<span class="comment">//this指代 Person 内部的 Private 的 name</span></span><br><span class="line">    &#125;<span class="comment">//此处定义的方法是 public ,即外部方法 </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;<span class="comment">//方法setName</span></span><br><span class="line">        <span class="keyword">this</span>.name = name;<span class="comment">//方法返回类型为 void, 省略 return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;<span class="comment">//方法返回值通过 return 实现</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;<span class="comment">//方法setAge</span></span><br><span class="line">        <span class="keyword">if</span> (age &lt; <span class="number">0</span> || age &gt; <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"invalid age value"</span>);<span class="comment">//直接抛出错误，即报错</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="一些小知识点"><a href="#一些小知识点" class="headerlink" title="一些小知识点"></a>一些小知识点</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;<span class="comment">//void 是方法返回类型,此处即方法返回类型为 void.</span></span><br><span class="line">    <span class="keyword">if</span> (name == <span class="keyword">null</span> || name.isBlank()) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IlleagalArgumentException(<span class="string">"Invalid Name"</span>);<span class="comment">//抛出错误</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.name = name.strip();<span class="comment">//去掉首尾的空格</span></span><br><span class="line">    <span class="comment">//this 是实例变量</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="定义方法"><a href="#定义方法" class="headerlink" title="定义方法"></a>定义方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">修饰符 方法返回类型 方法名(方法参数列表)&#123;</span><br><span class="line">    若干方法语句;</span><br><span class="line">    <span class="keyword">return</span> 方法返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="private-方法"><a href="#private-方法" class="headerlink" title="private 方法"></a>private 方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main</span> </span>&#123;<span class="comment">//程序是从 main 函数开始的，只有这一段是程序主体</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Person ming = <span class="keyword">new</span> Person();</span><br><span class="line">        ming.setBirth(<span class="number">1998</span>);</span><br><span class="line">        System.out.println(ming.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;<span class="comment">//定义一个 Person 类</span></span><br><span class="line">    <span class="keyword">private</span> String name;<span class="comment">//定义一个属于 Person 类的实例，String 类型的name</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> birth;<span class="comment">//定义一个属于 Person 类的实例，int 类型的birth</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirth</span><span class="params">(<span class="keyword">int</span> birth)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.birth = birth;<span class="comment">//this 是实例变量，即在当前实例 ming 中的 birth 变量</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> calcAge(<span class="number">2020</span>);<span class="comment">//方法返回值此时调用了 calcAge(private类型) 方法</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义 private 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">calcAge</span><span class="params">(<span class="keyword">int</span> currentYear)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> currentYear - <span class="keyword">this</span>.birth;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;面向对象编程&quot;&gt;&lt;a href=&quot;#面向对象编程&quot; class=&quot;headerlink&quot; title=&quot;面向对象编程&quot;&gt;&lt;/a&gt;面向对象编程&lt;/h2&gt;&lt;h3 id=&quot;如何理解？&quot;&gt;&lt;a href=&quot;#如何理解？&quot; class=&quot;headerlink&quot; title=&quot;如何理解？&quot;&gt;&lt;/a&gt;如何理解？&lt;/h3&gt;&lt;p&gt;在学习的过程中，偶然间看到知乎上一个转载片段讲的很生动形象，&lt;br&gt;面向过程编程就像是做一盘蛋炒饭，需要把每一个步骤单独开来，比如煮米饭、炒鸡蛋、混合…… 最后的步骤是把炒好的鸡蛋和大米混合在一起。&lt;br&gt;而面向对象编程( Object Oriented Programming )则不同，类比于盖浇饭，分别做好饭和盖菜，最后想要什么样的盖浇饭就在米饭上面盖什么样的盖菜。  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>排序算法</title>
    <link href="https://www.soulauv.cn/2020/01/17/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>https://www.soulauv.cn/2020/01/17/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</id>
    <published>2020-01-17T12:08:08.000Z</published>
    <updated>2020-01-20T15:37:18.097Z</updated>
    
    <content type="html"><![CDATA[<p>大学的最后一个寒假了，希望自己能够持续学习，每天定一些小目标然后完成。</p><a id="more"></a><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><h3 id="口语化简述"><a href="#口语化简述" class="headerlink" title="口语化简述"></a>口语化简述</h3><p>给定一组指定的数，大小顺序不确定。首先比较num(0)和num(1)，若num(0) &lt; num(1)则两者相对位置不变，否则两者交换位置；接着比较num(1)与num(2)……<br>每一轮循环结束，总有一个数在理想的位置，即在每次比较的最后面。<br>冒泡排序可以形象化为有一个泡泡在一直咕噜咕噜着往后走。<br>冒泡排序的时间复杂度是O(n^2)，在数组有序时为O(n)  </p><h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序算法</span></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">bubble_sort</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubble_sort1</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;<span class="comment">//此处定义了一个形参数组名字叫做arr(数组英文-array)</span></span><br><span class="line">    <span class="keyword">int</span> i , j , temp , len = arr.length;<span class="comment">//变量i，j分别表示num(0)和num(n+1),temp为临时变量</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; len - <span class="number">1</span>; j++)<span class="comment">//两个for循环。实话也很轻易看出时间复杂度是O(n^2)</span></span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">                temp = arr[j];</span><br><span class="line">                arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">                arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> [] array1 = &#123;<span class="number">12</span>,<span class="number">43</span>,<span class="number">23</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">54</span>,<span class="number">67</span>,<span class="number">45</span>&#125;;</span><br><span class="line">bubble_sort1(array1);</span><br><span class="line">System.out.println(Arrays.toString(array1));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="算法优化"><a href="#算法优化" class="headerlink" title="算法优化"></a>算法优化</h3><h4 id="增加标志变量change"><a href="#增加标志变量change" class="headerlink" title="增加标志变量change"></a>增加标志变量change</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加标志变量change的目的是为了若检测到没有位置交换则序列已然有序，终止排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">buuble_sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, change = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;len - <span class="number">1</span> &amp;&amp; change != <span class="number">0</span>; i++)&#123;</span><br><span class="line">        change = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">            <span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">                swap(arr[j],arr[j+<span class="number">1</span>]);</span><br><span class="line">                change = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="鸡尾酒排序"><a href="#鸡尾酒排序" class="headerlink" title="鸡尾酒排序"></a>鸡尾酒排序</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鸡尾酒排序</span></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CockTail_Sort</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">cocktail_sort</span> <span class="params">(<span class="keyword">int</span> [] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i ; <span class="keyword">int</span> left = <span class="number">0</span> ; <span class="keyword">int</span> right = arr.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right)&#123;</span><br><span class="line">            <span class="keyword">for</span> (i = left; i &lt; right; i++)</span><br><span class="line">                <span class="keyword">if</span>(arr[i] &gt; arr[i+<span class="number">1</span>])&#123;</span><br><span class="line">                    temp = arr[i];</span><br><span class="line">                    arr[i] = arr[i+<span class="number">1</span>];</span><br><span class="line">                    arr[i+<span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            right--;</span><br><span class="line">            <span class="keyword">for</span>(i = right; i &gt; left; i--)</span><br><span class="line">                <span class="keyword">if</span>(arr[i-<span class="number">1</span>] &gt; arr[i])&#123;</span><br><span class="line">                    temp = arr[i];</span><br><span class="line">                    arr[i] = arr[i-<span class="number">1</span>];</span><br><span class="line">                    arr[i-<span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            left++;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> [] array1 = &#123;<span class="number">12</span>,<span class="number">43</span>,<span class="number">23</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">54</span>,<span class="number">67</span>,<span class="number">45</span>&#125;;</span><br><span class="line">cocktail_sort(array1);</span><br><span class="line">System.out.println(Arrays.toString(array1));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><h3 id="口语化简述-1"><a href="#口语化简述-1" class="headerlink" title="口语化简述"></a>口语化简述</h3><p>插入排序类似于我们玩扑克牌时的排序方式，及将新抽到的牌插入已经有序的牌组中<br>将第一个元素标记为已排序，从第二个元素开始，与前一个元素比较，若小于前一个元素则将前一个元素后移一位，直至不小于前一个元素，此时插入抽出的元素</p><h3 id="算法实现-1"><a href="#算法实现-1" class="headerlink" title="算法实现"></a>算法实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;<span class="comment">//调用java标准库的内容</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Insertion_Sort</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertionSort</span><span class="params">(<span class="keyword">int</span> [] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> key = arr[i];</span><br><span class="line">            <span class="keyword">int</span> j = i - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; key)&#123;</span><br><span class="line">                arr[j+<span class="number">1</span>] = arr[j];</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            arr[j+<span class="number">1</span>] = key;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> [] array1 = &#123;<span class="number">12</span>,<span class="number">43</span>,<span class="number">23</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">54</span>,<span class="number">67</span>,<span class="number">45</span>&#125;;</span><br><span class="line">insertionSort(array1);</span><br><span class="line">System.out.println(Arrays.toString(array1));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//无论是哪种排序方法，都只是一个函数而已，需要自己构建一个使用函数的环境。</span></span><br></pre></td></tr></table></figure><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大学的最后一个寒假了，希望自己能够持续学习，每天定一些小目标然后完成。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java 学习笔记(二)</title>
    <link href="https://www.soulauv.cn/2020/01/16/Java-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C/"/>
    <id>https://www.soulauv.cn/2020/01/16/Java-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C/</id>
    <published>2020-01-16T07:37:45.000Z</published>
    <updated>2020-01-20T15:37:15.136Z</updated>
    
    <content type="html"><![CDATA[<h2 id="遍历数组操作"><a href="#遍历数组操作" class="headerlink" title="遍历数组操作"></a>遍历数组操作</h2><h3 id="通过-for-循环遍历数组"><a href="#通过-for-循环遍历数组" class="headerlink" title="通过 for 循环遍历数组"></a>通过 for 循环遍历数组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> [] ns = &#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">25</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ns.length;i++&gt;)&#123;</span><br><span class="line">            <span class="keyword">int</span> n = ns[i];</span><br><span class="line">            System.out.println(n);</span><br><span class="line">        &#125;<span class="comment">//该方法变量n拿到的是元素在数组中的索引</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="通过-for-each-循环遍历数组"><a href="#通过-for-each-循环遍历数组" class="headerlink" title="通过 for each 循环遍历数组"></a>通过 for each 循环遍历数组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> [] ns = &#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">25</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> n : ns)&#123;</span><br><span class="line">            System.out.println(n);</span><br><span class="line">        &#125;<span class="comment">//该方法变量n拿到的直接为数组中的元素</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Arrays-toString-方法"><a href="#Arrays-toString-方法" class="headerlink" title="Arrays.toString()方法"></a>Arrays.toString()方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;<span class="comment">//导入工具</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] ns = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">16</span>&#125;;</span><br><span class="line">        System.out.println(Arrays.toString(ns));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h2><h3 id="调用-Java-内置的排序功能"><a href="#调用-Java-内置的排序功能" class="headerlink" title="调用 Java 内置的排序功能"></a>调用 Java 内置的排序功能</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] ns = &#123; <span class="number">28</span>, <span class="number">12</span>, <span class="number">43</span>, <span class="number">53</span>, <span class="number">67</span>, <span class="number">26</span>&#125;;</span><br><span class="line">        Arrays.sort(ns);</span><br><span class="line">        System.out.println(Array.toString(ns));<span class="comment">//这种排序方式修改了数组本身</span></span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line">## 多维数组</span><br><span class="line">### 二维数组</span><br><span class="line">```java</span><br><span class="line"><span class="comment">//定义一个二维数组</span></span><br><span class="line"><span class="keyword">int</span> [][] ns = &#123;</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">    &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="二维数组的结构"><a href="#二维数组的结构" class="headerlink" title="二维数组的结构"></a>二维数组的结构</h4><p>二维数组本质上是数组的嵌套其结构如下：<br><img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720200120200141.png" alt>  </p><h4 id="访问二维数组的某个元素"><a href="#访问二维数组的某个元素" class="headerlink" title="访问二维数组的某个元素"></a>访问二维数组的某个元素</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//array[row][col] 此法来访问二维数组的某个元素 row即为行，col即为列。</span></span><br><span class="line">System.out.println(ns[<span class="number">1</span>][<span class="number">2</span>]);</span><br></pre></td></tr></table></figure><h4 id="打印一个二维数组"><a href="#打印一个二维数组" class="headerlink" title="打印一个二维数组"></a>打印一个二维数组</h4><p>需要使用两层嵌套的for循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//二维数组也可理解为"二重数组"即一个嵌套一个</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span>[] arr : ns)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> n : arr)&#123;</span><br><span class="line">        System.out.print(n);</span><br><span class="line">        System.out.print(<span class="string">','</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用-Java-标准库的方法"><a href="#使用-Java-标准库的方法" class="headerlink" title="使用 Java 标准库的方法"></a>使用 Java 标准库的方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] ns = &#123;</span><br><span class="line">            &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;;</span><br><span class="line">            &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;;</span><br><span class="line">            &#123;<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>&#125;<span class="comment">//二维数组的最后一行不需要加分号";"</span></span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(Arrays.deepToString(ns));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三维数组"><a href="#三维数组" class="headerlink" title="三维数组"></a>三维数组</h3><h4 id="二维数组的结构-1"><a href="#二维数组的结构-1" class="headerlink" title="二维数组的结构"></a>二维数组的结构</h4><p>二维数组的本质上是二维数组再嵌套一个数组。结构如下：<br><img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720200120203203.png" alt></p><h4 id="访问三维数组的某个元素"><a href="#访问三维数组的某个元素" class="headerlink" title="访问三维数组的某个元素"></a>访问三维数组的某个元素</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ns[<span class="number">2</span>][<span class="number">0</span>][<span class="number">1</span>];</span><br></pre></td></tr></table></figure><h3 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h3><h4 id="口语化简述"><a href="#口语化简述" class="headerlink" title="口语化简述"></a>口语化简述</h4><p>在命令行中可以执行java程序，在执行的同时可以传递一个参数，该参数为一个String[]数组(main方法可以接受一个命令行参数)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (String arg : args)&#123;</span><br><span class="line">            System.out.println(arg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如打印版本号  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (String arg : args)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"-version"</span>.equals(arg))&#123;</span><br><span class="line">                System.out.println(<span class="string">"v 1.00"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">以上程序需要在命令行编译并执行</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;遍历数组操作&quot;&gt;&lt;a href=&quot;#遍历数组操作&quot; class=&quot;headerlink&quot; title=&quot;遍历数组操作&quot;&gt;&lt;/a&gt;遍历数组操作&lt;/h2&gt;&lt;h3 id=&quot;通过-for-循环遍历数组&quot;&gt;&lt;a href=&quot;#通过-for-循环遍历数组&quot; class=&quot;headerlink&quot; title=&quot;通过 for 循环遍历数组&quot;&gt;&lt;/a&gt;通过 for 循环遍历数组&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; [] ns = &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; ns.length;i++&amp;gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = ns[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;comment&quot;&gt;//该方法变量n拿到的是元素在数组中的索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Windows环境下搭建hexo框架博客</title>
    <link href="https://www.soulauv.cn/2020/01/16/Windows%E7%8E%AF%E5%A2%83%E4%B8%8B%E6%90%AD%E5%BB%BAhexo%E6%A1%86%E6%9E%B6%E5%8D%9A%E5%AE%A2/"/>
    <id>https://www.soulauv.cn/2020/01/16/Windows%E7%8E%AF%E5%A2%83%E4%B8%8B%E6%90%AD%E5%BB%BAhexo%E6%A1%86%E6%9E%B6%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-01-16T06:14:08.953Z</published>
    <updated>2020-01-16T06:43:53.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows10下搭建hexo博客"><a href="#Windows10下搭建hexo博客" class="headerlink" title="Windows10下搭建hexo博客"></a>Windows10下搭建hexo博客</h1><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><ol><li>进入<a href="https://git-scm.com/" target="_blank" rel="noopener">Git官网</a>,或直接<a href="https://github-production-release-asset-2e65be.s3.amazonaws.com/23216272/71c5a100-00d6-11ea-822c-0617e3aba1d7?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20191113%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20191113T023831Z&X-Amz-Expires=300&X-Amz-Signature=0b309a0c0ffa097c60e68638cf898450ed5aadb34a9dfa912eff45d610bac9c5&X-Amz-SignedHeaders=host&actor_id=57254384&response-content-disposition=attachment%3B%20filename%3DGit-2.24.0.2-64-bit.exe&response-content-type=application%2Foctet-stream" target="_blank" rel="noopener">点击此处</a>开始下载</li><li>全部默认安装</li><li>安装完成后会在开始菜单出现<br><img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720191113104603.png" alt></li></ol><a id="more"></a><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><ol><li>进入<a href="http://nodejs.cn/" target="_blank" rel="noopener">nodejs中文网</a>，或<a href="https://npm.taobao.org/mirrors/node/v12.13.0/node-v12.13.0-x64.msi" target="_blank" rel="noopener">点击此处</a>下载64位安装包</li><li>全部默认安装</li><li>打开上一步图片中的Git Bash，输入  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></li><li>查看nodejs是否安装成功<br>若结果出现  <img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720191113105727.png" alt>]<br>则安装成功</li></ol><h2 id="全局安装cnpm"><a href="#全局安装cnpm" class="headerlink" title="全局安装cnpm"></a>全局安装cnpm</h2><ol><li>在Git Bash下输入   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure> 等待安装完成  </li><li>输入<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure>若出现版本号则安装成功  <img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720191113110535.png" alt></li></ol><h2 id="安装hexo框架"><a href="#安装hexo框架" class="headerlink" title="安装hexo框架"></a>安装hexo框架</h2><ol><li>输入<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>进行安装</li><li>输入<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>若出现版本号则安装成功<br><img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720191113110916.png" alt></li></ol><h2 id="初始化hexo博客"><a href="#初始化hexo博客" class="headerlink" title="初始化hexo博客"></a>初始化hexo博客</h2><ol><li><p>在某一位置(如在D盘根目录下)新建一文件夹(如命名为 hexo)<img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720191113111428.png" alt></p></li><li><p>右键打开Git Bash<br>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p> 此时文件夹中出现以下内容  <img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720191113111827.png" alt></p></li></ol><ol start="3"><li><p>启动博客<br>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p> 出现<br> <img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720191113112223.png" alt></p><p> 将’’<a href="http://localhost:4000&quot;输入浏览器网址框中即可在本地访问" target="_blank" rel="noopener">http://localhost:4000&quot;输入浏览器网址框中即可在本地访问</a></p></li><li><p>输入”Crtl + C”断开</p></li></ol><h2 id="将hexo博客部署到Github上"><a href="#将hexo博客部署到Github上" class="headerlink" title="将hexo博客部署到Github上"></a>将hexo博客部署到Github上</h2><ol><li><p>创建自己的Github账号后在页面右上角点击New repository新建一个仓库 <img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720191113112758.png" alt></p></li><li><p>按照下图格式进行命名  <img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720191113113044.png" alt><br>最好和用户名相同</p></li><li><p>在hexo目录下安装deployer插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure></li><li><p>设置_config.yml 文件<br>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>在文件最底部内容按图进行配置  <img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720191113113710.png" alt></p><p> 启动第二项 repo 为你的GitHub仓库地址位置如下图所示，复制粘贴即可<img src="https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720191113113829.png" alt></p></li><li><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Windows10下搭建hexo博客&quot;&gt;&lt;a href=&quot;#Windows10下搭建hexo博客&quot; class=&quot;headerlink&quot; title=&quot;Windows10下搭建hexo博客&quot;&gt;&lt;/a&gt;Windows10下搭建hexo博客&lt;/h1&gt;&lt;h2 id=&quot;安装Git&quot;&gt;&lt;a href=&quot;#安装Git&quot; class=&quot;headerlink&quot; title=&quot;安装Git&quot;&gt;&lt;/a&gt;安装Git&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;进入&lt;a href=&quot;https://git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Git官网&lt;/a&gt;,或直接&lt;a href=&quot;https://github-production-release-asset-2e65be.s3.amazonaws.com/23216272/71c5a100-00d6-11ea-822c-0617e3aba1d7?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20191113%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20191113T023831Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=0b309a0c0ffa097c60e68638cf898450ed5aadb34a9dfa912eff45d610bac9c5&amp;X-Amz-SignedHeaders=host&amp;actor_id=57254384&amp;response-content-disposition=attachment%3B%20filename%3DGit-2.24.0.2-64-bit.exe&amp;response-content-type=application%2Foctet-stream&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击此处&lt;/a&gt;开始下载&lt;/li&gt;
&lt;li&gt;全部默认安装&lt;/li&gt;
&lt;li&gt;安装完成后会在开始菜单出现&lt;br&gt;&lt;img src=&quot;https://pic-soulauv.oss-cn-beijing.aliyuncs.com/TIM%E5%9B%BE%E7%89%8720191113104603.png&quot; alt&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java 学习笔记(一)</title>
    <link href="https://www.soulauv.cn/2019/12/03/Java-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80/"/>
    <id>https://www.soulauv.cn/2019/12/03/Java-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80/</id>
    <published>2019-12-03T07:25:38.000Z</published>
    <updated>2020-01-22T01:52:04.340Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JDK-JRE-JVM-的关系"><a href="#JDK-JRE-JVM-的关系" class="headerlink" title="JDK JRE JVM 的关系"></a>JDK JRE JVM 的关系</h2><ul><li>JVM(Java Virtual Machine)即Java虚拟机,Java技术的核心,与Java最重要的跨平台特性息息相关</li><li>JDK(Java Development Kit)即Java开发工具包</li><li>JRE(Java Runtime Environment)即Java运行环境   </li></ul><a id="more"></a><hr><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"HelloWorld"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>定义变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>   <span class="comment">//数据类型 变量名称</span></span><br></pre></td></tr></table></figure><hr><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>final 关键字声明常量属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">double</span> PI = <span class="number">3.14</span>; <span class="comment">//声明一个名为PI的常量并赋值为3.14</span></span><br></pre></td></tr></table></figure><hr><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><table><thead><tr><th>数据类型</th><th>默认值</th><th>存储格式</th><th>数据范围</th><th>包装类型</th></tr></thead><tbody><tr><td>short</td><td>0</td><td>2B</td><td>-32,768 ~ 32,767</td><td>Short</td></tr><tr><td>int</td><td>0</td><td>4B</td><td>-2,147,483,648 ~ 2,147,483,647</td><td>Integer</td></tr><tr><td>byte</td><td>0</td><td>1B</td><td>-128 ~ 127</td><td>Byte</td></tr><tr><td>char</td><td>空</td><td>2B</td><td>0 ~ 65535</td><td>Character</td></tr><tr><td>long</td><td>0L或0l</td><td>8B</td><td>-9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807</td><td>Long</td></tr><tr><td>float</td><td>0.0F或0.0f</td><td>4B</td><td>32位IEEE-754单精度范围</td><td>Float</td></tr><tr><td>double</td><td>0.0或0.0D(d)</td><td>8B</td><td>64位IEEE-754双精度范围</td><td>Double</td></tr><tr><td>boolean</td><td>false</td><td>1B</td><td>true 或 false</td><td>Boolean</td></tr></tbody></table><hr><h2 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h2><p>byte, short. int, long</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> num = <span class="number">1L</span>;</span><br></pre></td></tr></table></figure><h2 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h2><p>float, double</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> num = <span class="number">7.2F</span> <span class="comment">//double 类型可以不加d</span></span><br></pre></td></tr></table></figure><h2 id="char"><a href="#char" class="headerlink" title="char"></a>char</h2><p>char 表示单个字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> a = <span class="string">'a'</span>;</span><br></pre></td></tr></table></figure><h2 id="boolean"><a href="#boolean" class="headerlink" title="boolean"></a>boolean</h2><p>仅有true 或者 false</p><hr><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><ul><li>初始化<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String s0 = <span class="string">"abc"</span>;</span><br><span class="line">String s1 = <span class="keyword">new</span> String(<span class="string">"abc"</span>);</span><br></pre></td></tr></table></figure></li><li>计算字符串的长度<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//length 方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">length</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line">String s1 = <span class="string">"abc"</span>;</span><br><span class="line">String s2 = <span class="string">"Java"</span>;</span><br><span class="line"><span class="keyword">int</span> len1 = s1.length();</span><br><span class="line"><span class="keyword">int</span> len2 = s2.length();</span><br></pre></td></tr></table></figure></li><li>字符串比较<br>equals() 方法: 判断两个字符串对象的内容是否相同( 同则返回true; 不同则返回false )<br>equalsIgnoreCase()方法: 忽略大小写<br>concat()方法: 连接字符串<br>charAt()方法: 按照索引值, 获得字符串中的指定字符<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringCompare</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String s = <span class="keyword">new</span> String(<span class="string">"Java"</span>);<span class="comment">//定义字符串方法1,定义s并初始化为Java</span></span><br><span class="line">        String m = <span class="string">"java"</span>;<span class="comment">//定义字符串2,定义m并初始化为java</span></span><br><span class="line">        System.out.println(s.equals(m));<span class="comment">//不忽略大小写</span></span><br><span class="line">        System.out.println(s.equalsIgnoreCase(m));<span class="comment">//忽略大小写</span></span><br><span class="line">        System.out.println(s == m);<span class="comment">//比较内存地址是否相同</span></span><br><span class="line">        System.out.println(<span class="string">"Hello"</span> + <span class="string">"java"</span>);<span class="comment">//字符串连接方法1</span></span><br><span class="line">        System.out.println(s.concat(m));<span class="comment">//字符串连接方法2concat()方法</span></span><br><span class="line">        System.out.println(s.charAt(<span class="number">1</span>));<span class="comment">//输出字符串中索引值为1的字符</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>字符串常用提取方法<table><thead><tr><th>方法</th><th>返回值</th><th>功能描述</th></tr></thead><tbody><tr><td>indexOf(int ch)</td><td>int</td><td>搜索字符 ch 第一次出现的索引</td></tr><tr><td>indexOf(String value)</td><td>int</td><td>搜索字符串 value 第一次出现的索引</td></tr><tr><td>lastIndexOf(int ch)</td><td>int</td><td>搜索字符串 ch 最后一次出现的索引</td></tr><tr><td>LastIndexOf(String value)</td><td>int</td><td>搜索字符串 value 最后一次出现的索引</td></tr><tr><td>substring(int index)</td><td>String</td><td>提取从索引开始到结束的字符串</td></tr><tr><td>substring(int beginindex, int endindex)</td><td>String</td><td>提取 beginindex 和 endindex 之间的字符串部分</td></tr><tr><td>trim()</td><td>String</td><td>返回一个前后不含任何空格的调用字符串的副本</td></tr></tbody></table></li></ul><hr><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><table><thead><tr><th>算术运算符</th><th>名称</th><th>描述</th><th>类型</th><th>举例</th></tr></thead><tbody><tr><td>+</td><td>加法</td><td>相加运算符两侧的值</td><td>双目运算符</td><td>a + b = 8</td></tr><tr><td>-</td><td>减法</td><td>左操作数减去右操作数</td><td>双目运算符</td><td>a - b = 2</td></tr><tr><td>*</td><td>乘法</td><td>相乘操作符两侧的值</td><td>双目运算符</td><td>a * b = 15</td></tr><tr><td>/</td><td>除法</td><td>左操作数除以右操作数</td><td>双目运算符</td><td>a / b = 1</td></tr><tr><td>%</td><td>取余</td><td>左操作数除以右操作数的余数</td><td>双目运算符</td><td>a % b = 2</td></tr><tr><td>++</td><td>自增</td><td>操作数的值增加1</td><td>单目运算符</td><td>++i = 2</td></tr><tr><td>–</td><td>自减</td><td>操作数的值减少1</td><td>单目运算符</td><td>–i = 0</td></tr></tbody></table><ul><li>++i, –i: 先自增或自减,再进行表达式运算</li><li>i++, –i: 先进行表达式运算,再自增或自减</li></ul><hr><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><p>表格中a = 60, b = 13    </p><table><thead><tr><th>位运算符</th><th>名称</th><th>描述</th><th>举例</th></tr></thead><tbody><tr><td>&amp;</td><td>按位与</td><td>同 1 则 1, 否则为 0</td><td>(a &amp; b), 得到 12, 即 0000 1100</td></tr><tr><td>|</td><td>按位或</td><td>同 0 则 0, 否则为 1</td><td>(a</td></tr><tr><td>^</td><td>按位异或</td><td>同 0 异 1</td><td>(a ^ b), 得到 49, 即 0011 0001</td></tr><tr><td>~</td><td>按位补</td><td>翻转操作数的每一位</td><td>(~a), 得到 -61, 即 1100 0011</td></tr><tr><td>&lt;&lt;</td><td>按位左移</td><td>左操作数按位左移右操作数指定的位数</td><td>a &gt;&gt; 2 得到240, 即 1111 0000</td></tr><tr><td>&gt;&gt;</td><td>按位右移</td><td>左操作数按位右移右操作数指定的位数</td><td>a &lt;&lt; 2 得到 15, 即 1111</td></tr><tr><td>&gt;&gt;&gt;</td><td>按位右移补零</td><td>左操作数的值按右操作数指定的位数右移, 空位补零</td><td>a &gt;&gt;&gt; 2 得到 15, 即 0000 1111</td></tr></tbody></table><hr><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>表格中 a = true, b = false</p><table><thead><tr><th>逻辑运算符</th><th>名称</th><th>描述</th><th>类型</th><th>举例</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>与</td><td>同真则真, 否则为假</td><td>双目运算符</td><td>(a &amp;&amp; b) 为假</td></tr><tr><td>||</td><td>或</td><td>有真就真, 有假必假</td><td>双目运算符</td><td>(a</td></tr><tr><td>!</td><td>非</td><td>非真为假, 非假为真</td><td>单目运算符</td><td>(!a) 为假</td></tr><tr><td>^</td><td>异或</td><td>同则假, 否则为真</td><td>双目运算符</td><td>(a ^ b) 为真</td></tr></tbody></table><hr><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><table><thead><tr><th>比较运算符</th><th>名称</th></tr></thead><tbody><tr><td>==</td><td>等于</td></tr><tr><td>! =</td><td>不等于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr></tbody></table><ul><li>双目运算符: 布尔表达式? 表达式 1 : 表达式 2<br>如果布尔表达式的值为true 则执行表达式1, 否则执行表达式2</li><li>==和!=适用于所有的基本数据类型，其他关系运算符不适用于boolean，因为 boolean 值只有true和false，比较没有任何意义。</li><li>==和!=也适用于所有对象，可以比较对象的引用是否相同。</li></ul><hr><h2 id="方法-函数"><a href="#方法-函数" class="headerlink" title="方法(函数)"></a>方法(函数)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">访问修饰符 返回值类型 方法名(参数列表)&#123;</span><br><span class="line">    方法体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">functionName</span><span class="params">(Object arg)</span></span>&#123;</span><br><span class="line">    方法体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h2><p>if 语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件)&#123;</span><br><span class="line">    条件成立时执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>if else 语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件)&#123;</span><br><span class="line">    代码块<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    代码块<span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多重 if 语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件<span class="number">1</span>)&#123;</span><br><span class="line">    代码块<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(条件<span class="number">2</span>)&#123;</span><br><span class="line">    代码块<span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    代码块n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="switch-语句"><a href="#switch-语句" class="headerlink" title="switch 语句"></a>switch 语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123;</span><br><span class="line">    <span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">        代码块<span class="number">1</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> 值<span class="number">2</span>:</span><br><span class="line">        代码块<span class="number">2</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    ...</span><br><span class="line">    dafult:</span><br><span class="line">        默认执行的代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="while-语法"><a href="#while-语法" class="headerlink" title="while 语法"></a>while 语法</h2><p>先判断, 在执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(条件)&#123;</span><br><span class="line">    代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="do-while-语法"><a href="#do-while-语法" class="headerlink" title="do-while 语法"></a>do-while 语法</h2><p>先执行, 再判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    代码块</span><br><span class="line">&#125;<span class="keyword">while</span>(条件);</span><br></pre></td></tr></table></figure><h2 id="for-语句"><a href="#for-语句" class="headerlink" title="for 语句"></a>for 语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(循环变量初始化; 循环条件; 循环变量变化)&#123;</span><br><span class="line">    循环操作</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h2><p>break: 用于条件和循环语句中, 用来跳出循环语句<br>continue: 跳过循环体中剩余的语句执行下一次循环</p><hr><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>相同数据类型的元素按一定顺序排列的集合。    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明数组</span></span><br><span class="line">数据类型[] 数组名;<span class="comment">//或者： 数据类型 数组名[]</span></span><br><span class="line"><span class="comment">//例子</span></span><br><span class="line"><span class="keyword">int</span> args[];</span><br><span class="line"><span class="keyword">char</span> symbol[];</span><br><span class="line">String [] name;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义数组</span></span><br><span class="line">数组名 = <span class="keyword">new</span> 数据类型 [数组长度];</span><br><span class="line"><span class="comment">//例子</span></span><br><span class="line"><span class="keyword">int</span> [] ages = &#123;<span class="number">12</span>, <span class="number">18</span>, <span class="number">9</span>, <span class="number">33</span>, <span class="number">45</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> [] symbol = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过下标访问数组元素</span></span><br><span class="line">ages[<span class="number">0</span>] = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将一个数组赋值给另一个数组</span></span><br><span class="line"><span class="keyword">int</span> [] a1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> [] a2;</span><br><span class="line">a2 = a1;<span class="comment">//a1和a2是同一数组的不同名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数组遍历</span></span><br><span class="line"><span class="keyword">int</span> [] ages = &#123;<span class="number">12</span>, <span class="number">21</span>, <span class="number">2</span>, <span class="number">43</span>, <span class="number">23</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ages.length; i++)&#123;</span><br><span class="line">    System.out.println(ages[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//foreach 方法</span></span><br><span class="line"><span class="keyword">int</span> [] ages = &#123;<span class="number">12</span>, <span class="number">21</span>, <span class="number">2</span>, <span class="number">43</span>, <span class="number">23</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> age:ages)&#123;</span><br><span class="line">    System.out.println(age);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明和定义</span></span><br><span class="line">数据类型 [] [] 数组名 = <span class="keyword">new</span> 数据类型[行的个数][列的个数]；</span><br><span class="line"></span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">数据类型 [] [] 数组名；</span><br><span class="line">数组名 = <span class="keyword">new</span> 数据类型[行的个数][列的个数]；</span><br><span class="line"></span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">数据类型 [] [] = 数组名 = &#123;</span><br><span class="line">&#123;第一行值<span class="number">1</span>， 第一行值<span class="number">2</span>, ...&#125;</span><br><span class="line">&#123;第二行值<span class="number">1</span>， 第二行值<span class="number">2</span>，...&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过下标访问二维数组</span></span><br><span class="line">数组名[行的索引][列的索引] = 值;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;JDK-JRE-JVM-的关系&quot;&gt;&lt;a href=&quot;#JDK-JRE-JVM-的关系&quot; class=&quot;headerlink&quot; title=&quot;JDK JRE JVM 的关系&quot;&gt;&lt;/a&gt;JDK JRE JVM 的关系&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;JVM(Java Virtual Machine)即Java虚拟机,Java技术的核心,与Java最重要的跨平台特性息息相关&lt;/li&gt;
&lt;li&gt;JDK(Java Development Kit)即Java开发工具包&lt;/li&gt;
&lt;li&gt;JRE(Java Runtime Environment)即Java运行环境   &lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>各类快捷键</title>
    <link href="https://www.soulauv.cn/2019/12/01/%E5%90%84%E7%B1%BB%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://www.soulauv.cn/2019/12/01/%E5%90%84%E7%B1%BB%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2019-12-01T12:16:05.000Z</published>
    <updated>2020-01-29T15:03:49.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="VS-code-常用快捷键"><a href="#VS-code-常用快捷键" class="headerlink" title="VS code 常用快捷键"></a>VS code 常用快捷键</h2><table><thead><tr><th>按键</th><th>作用</th></tr></thead><tbody><tr><td>Ctrl + Shift + V</td><td>预览Markdown 文档</td></tr><tr><td>Ctrl + /</td><td>批量注释批量取消注释</td></tr><tr><td>Ctrl + k 接Ctrl + t</td><td>更换主题</td></tr><tr><td>Ctrl + Shift + P</td><td>打开命令行</td></tr></tbody></table><a id="more"></a><h2 id="Markdown-常用操作"><a href="#Markdown-常用操作" class="headerlink" title="Markdown 常用操作"></a>Markdown 常用操作</h2><table><thead><tr><th>操作</th><th>目的</th></tr></thead><tbody><tr><td>![avatar](图片路径)</td><td>插入图片</td></tr><tr><td>```  ```</td><td>连续三个反引号间插入代码块</td></tr><tr><td>```java ```</td><td>```后键入所使用语言实现代码高亮</td></tr></tbody></table><h2 id="Linux-常用快捷键"><a href="#Linux-常用快捷键" class="headerlink" title="Linux 常用快捷键"></a>Linux 常用快捷键</h2><table><thead><tr><th>命令</th><th>作用</th><th>全称</th></tr></thead><tbody><tr><td>touch</td><td>创建新文件</td><td></td></tr><tr><td>cd</td><td>更换目录</td><td>change directory</td></tr><tr><td>useradd -m user_name</td><td>创建新用户，同时创建同名文件夹</td><td></td></tr><tr><td>passwd + user_name</td><td>为指定用户创建密码</td><td></td></tr><tr><td>su + user_name</td><td>切换用户</td><td>switch user</td></tr><tr><td>whoami</td><td>查看当前用户</td><td></td></tr><tr><td>uname -a</td><td>查看系统信息</td><td></td></tr><tr><td>id + user_name</td><td>查看对应用户的信息</td><td></td></tr><tr><td>wget + url</td><td>下载指定 url 的文件</td><td></td></tr><tr><td>Ctrl + C</td><td>强制终止进程</td><td></td></tr><tr><td>mv A B</td><td>将 A 更名为 B</td><td></td></tr><tr><td>ps -ef</td><td>查看所有进程</td><td></td></tr></tbody></table><h2 id="Windows下常用快捷键"><a href="#Windows下常用快捷键" class="headerlink" title="Windows下常用快捷键"></a>Windows下常用快捷键</h2><table><thead><tr><th>按键</th><th>作用</th><th>全称</th></tr></thead><tbody><tr><td>Ctrl + Win + →</td><td>切换桌面</td><td></td></tr><tr><td>Win + V</td><td>打开剪切板</td><td></td></tr><tr><td>Tab</td><td>制表键</td><td>Tabulator key</td></tr><tr><td>Ctrl + Shift + B</td><td>唤出Win10 表情输入界面</td><td></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;VS-code-常用快捷键&quot;&gt;&lt;a href=&quot;#VS-code-常用快捷键&quot; class=&quot;headerlink&quot; title=&quot;VS code 常用快捷键&quot;&gt;&lt;/a&gt;VS code 常用快捷键&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;按键&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Ctrl + Shift + V&lt;/td&gt;
&lt;td&gt;预览Markdown 文档&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + /&lt;/td&gt;
&lt;td&gt;批量注释批量取消注释&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + k 接Ctrl + t&lt;/td&gt;
&lt;td&gt;更换主题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl + Shift + P&lt;/td&gt;
&lt;td&gt;打开命令行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
    
      <category term="VS code" scheme="https://www.soulauv.cn/tags/VS-code/"/>
    
  </entry>
  
</feed>
